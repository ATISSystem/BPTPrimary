'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace net.sepahansms
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="smsSendWebServiceforPHPSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class smsSendWebServiceforPHP
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private SmsSendOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendSmsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendSingleSmsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCreditOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetReceiveSMSWithNumberOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReadReceiveSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteReceiveSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDeliveryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLastDeliveryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSingleDeliveryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllDeliveryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetReadReceiveSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetReceiveSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCountAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReceiveMessaageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendFutureSmsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteFutureSmsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckSendFutureOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.R2Core.My.MySettings.Default.R2Core_net_sepahansms_smsSendWebServiceforPHP
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event SmsSendCompleted As SmsSendCompletedEventHandler
        
        '''<remarks/>
        Public Event SendSmsCompleted As SendSmsCompletedEventHandler
        
        '''<remarks/>
        Public Event SendSingleSmsCompleted As SendSingleSmsCompletedEventHandler
        
        '''<remarks/>
        Public Event getCreditCompleted As getCreditCompletedEventHandler
        
        '''<remarks/>
        Public Event GetReceiveSMSWithNumberCompleted As GetReceiveSMSWithNumberCompletedEventHandler
        
        '''<remarks/>
        Public Event ReadReceiveSMSCompleted As ReadReceiveSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteReceiveSMSCompleted As DeleteReceiveSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDeliveryCompleted As GetDeliveryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLastDeliveryCompleted As GetLastDeliveryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSingleDeliveryCompleted As GetSingleDeliveryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllDeliveryCompleted As GetAllDeliveryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetReadReceiveSMSCompleted As GetReadReceiveSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event GetReceiveSMSCompleted As GetReceiveSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCountAllCompleted As GetCountAllCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCountCompleted As GetCountCompletedEventHandler
        
        '''<remarks/>
        Public Event ReceiveMessaageCompleted As ReceiveMessaageCompletedEventHandler
        
        '''<remarks/>
        Public Event SendFutureSmsCompleted As SendFutureSmsCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteFutureSmsCompleted As DeleteFutureSmsCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckSendFutureCompleted As CheckSendFutureCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SmsSend", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SmsSend(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal SmsText() As String, ByVal MobileNumber() As String, ByVal SenderNumber As String) As Long()
            Dim results() As Object = Me.Invoke("SmsSend", New Object() {UserName, Pass, Domain, SmsText, MobileNumber, SenderNumber})
            Return CType(results(0),Long())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SmsSendAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal SmsText() As String, ByVal MobileNumber() As String, ByVal SenderNumber As String)
            Me.SmsSendAsync(UserName, Pass, Domain, SmsText, MobileNumber, SenderNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SmsSendAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal SmsText() As String, ByVal MobileNumber() As String, ByVal SenderNumber As String, ByVal userState As Object)
            If (Me.SmsSendOperationCompleted Is Nothing) Then
                Me.SmsSendOperationCompleted = AddressOf Me.OnSmsSendOperationCompleted
            End If
            Me.InvokeAsync("SmsSend", New Object() {UserName, Pass, Domain, SmsText, MobileNumber, SenderNumber}, Me.SmsSendOperationCompleted, userState)
        End Sub
        
        Private Sub OnSmsSendOperationCompleted(ByVal arg As Object)
            If (Not (Me.SmsSendCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SmsSendCompleted(Me, New SmsSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSms", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendSms(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal SmsText() As String, ByVal MobileNumber() As String, ByVal SenderNumber As String, ByVal sendType As SendType, ByVal smsMode As SmsMode) As Long()
            Dim results() As Object = Me.Invoke("SendSms", New Object() {UserName, Pass, Domain, SmsText, MobileNumber, SenderNumber, sendType, smsMode})
            Return CType(results(0),Long())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendSmsAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal SmsText() As String, ByVal MobileNumber() As String, ByVal SenderNumber As String, ByVal sendType As SendType, ByVal smsMode As SmsMode)
            Me.SendSmsAsync(UserName, Pass, Domain, SmsText, MobileNumber, SenderNumber, sendType, smsMode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendSmsAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal SmsText() As String, ByVal MobileNumber() As String, ByVal SenderNumber As String, ByVal sendType As SendType, ByVal smsMode As SmsMode, ByVal userState As Object)
            If (Me.SendSmsOperationCompleted Is Nothing) Then
                Me.SendSmsOperationCompleted = AddressOf Me.OnSendSmsOperationCompleted
            End If
            Me.InvokeAsync("SendSms", New Object() {UserName, Pass, Domain, SmsText, MobileNumber, SenderNumber, sendType, smsMode}, Me.SendSmsOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendSmsOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendSmsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendSmsCompleted(Me, New SendSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSingleSms", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendSingleSms(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal SmsText As String, ByVal MobileNumber As String, ByVal SenderNumber As String, ByVal smsMode As SmsMode) As Long
            Dim results() As Object = Me.Invoke("SendSingleSms", New Object() {UserName, Pass, Domain, SmsText, MobileNumber, SenderNumber, smsMode})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendSingleSmsAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal SmsText As String, ByVal MobileNumber As String, ByVal SenderNumber As String, ByVal smsMode As SmsMode)
            Me.SendSingleSmsAsync(UserName, Pass, Domain, SmsText, MobileNumber, SenderNumber, smsMode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendSingleSmsAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal SmsText As String, ByVal MobileNumber As String, ByVal SenderNumber As String, ByVal smsMode As SmsMode, ByVal userState As Object)
            If (Me.SendSingleSmsOperationCompleted Is Nothing) Then
                Me.SendSingleSmsOperationCompleted = AddressOf Me.OnSendSingleSmsOperationCompleted
            End If
            Me.InvokeAsync("SendSingleSms", New Object() {UserName, Pass, Domain, SmsText, MobileNumber, SenderNumber, smsMode}, Me.SendSingleSmsOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendSingleSmsOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendSingleSmsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendSingleSmsCompleted(Me, New SendSingleSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCredit", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getCredit(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String) As String
            Dim results() As Object = Me.Invoke("getCredit", New Object() {UserName, Pass, Domain})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCreditAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String)
            Me.getCreditAsync(UserName, Pass, Domain, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCreditAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal userState As Object)
            If (Me.getCreditOperationCompleted Is Nothing) Then
                Me.getCreditOperationCompleted = AddressOf Me.OngetCreditOperationCompleted
            End If
            Me.InvokeAsync("getCredit", New Object() {UserName, Pass, Domain}, Me.getCreditOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCreditOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCreditCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCreditCompleted(Me, New getCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReceiveSMSWithNumber", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReceiveSMSWithNumber(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal RecType As ReceiveType, ByVal LineNumber As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal Count As System.Nullable(Of Integer), ByVal FromDate As String, ByVal ToDate As String) As ReceiveSMS()
            Dim results() As Object = Me.Invoke("GetReceiveSMSWithNumber", New Object() {UserName, Pass, Domain, RecType, LineNumber, Count, FromDate, ToDate})
            Return CType(results(0),ReceiveSMS())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetReceiveSMSWithNumberAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal RecType As ReceiveType, ByVal LineNumber As String, ByVal Count As System.Nullable(Of Integer), ByVal FromDate As String, ByVal ToDate As String)
            Me.GetReceiveSMSWithNumberAsync(UserName, Pass, Domain, RecType, LineNumber, Count, FromDate, ToDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetReceiveSMSWithNumberAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal RecType As ReceiveType, ByVal LineNumber As String, ByVal Count As System.Nullable(Of Integer), ByVal FromDate As String, ByVal ToDate As String, ByVal userState As Object)
            If (Me.GetReceiveSMSWithNumberOperationCompleted Is Nothing) Then
                Me.GetReceiveSMSWithNumberOperationCompleted = AddressOf Me.OnGetReceiveSMSWithNumberOperationCompleted
            End If
            Me.InvokeAsync("GetReceiveSMSWithNumber", New Object() {UserName, Pass, Domain, RecType, LineNumber, Count, FromDate, ToDate}, Me.GetReceiveSMSWithNumberOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetReceiveSMSWithNumberOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetReceiveSMSWithNumberCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetReceiveSMSWithNumberCompleted(Me, New GetReceiveSMSWithNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReadReceiveSMS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReadReceiveSMS(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal reciveCode As Decimal) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> System.Nullable(Of Boolean)
            Dim results() As Object = Me.Invoke("ReadReceiveSMS", New Object() {UserName, Pass, Domain, reciveCode})
            Return CType(results(0),System.Nullable(Of Boolean))
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReadReceiveSMSAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal reciveCode As Decimal)
            Me.ReadReceiveSMSAsync(UserName, Pass, Domain, reciveCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReadReceiveSMSAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal reciveCode As Decimal, ByVal userState As Object)
            If (Me.ReadReceiveSMSOperationCompleted Is Nothing) Then
                Me.ReadReceiveSMSOperationCompleted = AddressOf Me.OnReadReceiveSMSOperationCompleted
            End If
            Me.InvokeAsync("ReadReceiveSMS", New Object() {UserName, Pass, Domain, reciveCode}, Me.ReadReceiveSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnReadReceiveSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReadReceiveSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReadReceiveSMSCompleted(Me, New ReadReceiveSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteReceiveSMS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteReceiveSMS(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal reciveCode() As Decimal) As Integer
            Dim results() As Object = Me.Invoke("DeleteReceiveSMS", New Object() {UserName, Pass, Domain, reciveCode})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteReceiveSMSAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal reciveCode() As Decimal)
            Me.DeleteReceiveSMSAsync(UserName, Pass, Domain, reciveCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteReceiveSMSAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal reciveCode() As Decimal, ByVal userState As Object)
            If (Me.DeleteReceiveSMSOperationCompleted Is Nothing) Then
                Me.DeleteReceiveSMSOperationCompleted = AddressOf Me.OnDeleteReceiveSMSOperationCompleted
            End If
            Me.InvokeAsync("DeleteReceiveSMS", New Object() {UserName, Pass, Domain, reciveCode}, Me.DeleteReceiveSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteReceiveSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteReceiveSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteReceiveSMSCompleted(Me, New DeleteReceiveSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDelivery", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDelivery(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal smsId() As Long) As Integer()
            Dim results() As Object = Me.Invoke("GetDelivery", New Object() {UserName, Pass, Domain, smsId})
            Return CType(results(0),Integer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDeliveryAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal smsId() As Long)
            Me.GetDeliveryAsync(UserName, Pass, Domain, smsId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDeliveryAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal smsId() As Long, ByVal userState As Object)
            If (Me.GetDeliveryOperationCompleted Is Nothing) Then
                Me.GetDeliveryOperationCompleted = AddressOf Me.OnGetDeliveryOperationCompleted
            End If
            Me.InvokeAsync("GetDelivery", New Object() {UserName, Pass, Domain, smsId}, Me.GetDeliveryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDeliveryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDeliveryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDeliveryCompleted(Me, New GetDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLastDelivery", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLastDelivery(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal smsId() As Long) As Integer()
            Dim results() As Object = Me.Invoke("GetLastDelivery", New Object() {UserName, Pass, Domain, smsId})
            Return CType(results(0),Integer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLastDeliveryAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal smsId() As Long)
            Me.GetLastDeliveryAsync(UserName, Pass, Domain, smsId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLastDeliveryAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal smsId() As Long, ByVal userState As Object)
            If (Me.GetLastDeliveryOperationCompleted Is Nothing) Then
                Me.GetLastDeliveryOperationCompleted = AddressOf Me.OnGetLastDeliveryOperationCompleted
            End If
            Me.InvokeAsync("GetLastDelivery", New Object() {UserName, Pass, Domain, smsId}, Me.GetLastDeliveryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLastDeliveryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLastDeliveryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLastDeliveryCompleted(Me, New GetLastDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSingleDelivery", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSingleDelivery(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal SmsId As Long) As Integer
            Dim results() As Object = Me.Invoke("GetSingleDelivery", New Object() {UserName, Pass, Domain, SmsId})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSingleDeliveryAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal SmsId As Long)
            Me.GetSingleDeliveryAsync(UserName, Pass, Domain, SmsId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSingleDeliveryAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal SmsId As Long, ByVal userState As Object)
            If (Me.GetSingleDeliveryOperationCompleted Is Nothing) Then
                Me.GetSingleDeliveryOperationCompleted = AddressOf Me.OnGetSingleDeliveryOperationCompleted
            End If
            Me.InvokeAsync("GetSingleDelivery", New Object() {UserName, Pass, Domain, SmsId}, Me.GetSingleDeliveryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSingleDeliveryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSingleDeliveryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSingleDeliveryCompleted(Me, New GetSingleDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllDelivery", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllDelivery(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal SmsId() As Long, ByVal LineNumber As String) As Integer()
            Dim results() As Object = Me.Invoke("GetAllDelivery", New Object() {UserName, Pass, Domain, SmsId, LineNumber})
            Return CType(results(0),Integer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllDeliveryAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal SmsId() As Long, ByVal LineNumber As String)
            Me.GetAllDeliveryAsync(UserName, Pass, Domain, SmsId, LineNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllDeliveryAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal SmsId() As Long, ByVal LineNumber As String, ByVal userState As Object)
            If (Me.GetAllDeliveryOperationCompleted Is Nothing) Then
                Me.GetAllDeliveryOperationCompleted = AddressOf Me.OnGetAllDeliveryOperationCompleted
            End If
            Me.InvokeAsync("GetAllDelivery", New Object() {UserName, Pass, Domain, SmsId, LineNumber}, Me.GetAllDeliveryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllDeliveryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllDeliveryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllDeliveryCompleted(Me, New GetAllDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReadReceiveSMS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReadReceiveSMS(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal Read As Boolean, ByVal FromDate As String, ByVal ToDate As String) As ReceiveSMS()
            Dim results() As Object = Me.Invoke("GetReadReceiveSMS", New Object() {UserName, Pass, Domain, Read, FromDate, ToDate})
            Return CType(results(0),ReceiveSMS())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetReadReceiveSMSAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal Read As Boolean, ByVal FromDate As String, ByVal ToDate As String)
            Me.GetReadReceiveSMSAsync(UserName, Pass, Domain, Read, FromDate, ToDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetReadReceiveSMSAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal Read As Boolean, ByVal FromDate As String, ByVal ToDate As String, ByVal userState As Object)
            If (Me.GetReadReceiveSMSOperationCompleted Is Nothing) Then
                Me.GetReadReceiveSMSOperationCompleted = AddressOf Me.OnGetReadReceiveSMSOperationCompleted
            End If
            Me.InvokeAsync("GetReadReceiveSMS", New Object() {UserName, Pass, Domain, Read, FromDate, ToDate}, Me.GetReadReceiveSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetReadReceiveSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetReadReceiveSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetReadReceiveSMSCompleted(Me, New GetReadReceiveSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReceiveSMS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReceiveSMS(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal RecType As ReceiveType, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal Count As System.Nullable(Of Integer), ByVal FromDate As String, ByVal ToDate As String) As ReceiveSMS()
            Dim results() As Object = Me.Invoke("GetReceiveSMS", New Object() {UserName, Pass, Domain, RecType, Count, FromDate, ToDate})
            Return CType(results(0),ReceiveSMS())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetReceiveSMSAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal RecType As ReceiveType, ByVal Count As System.Nullable(Of Integer), ByVal FromDate As String, ByVal ToDate As String)
            Me.GetReceiveSMSAsync(UserName, Pass, Domain, RecType, Count, FromDate, ToDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetReceiveSMSAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal RecType As ReceiveType, ByVal Count As System.Nullable(Of Integer), ByVal FromDate As String, ByVal ToDate As String, ByVal userState As Object)
            If (Me.GetReceiveSMSOperationCompleted Is Nothing) Then
                Me.GetReceiveSMSOperationCompleted = AddressOf Me.OnGetReceiveSMSOperationCompleted
            End If
            Me.InvokeAsync("GetReceiveSMS", New Object() {UserName, Pass, Domain, RecType, Count, FromDate, ToDate}, Me.GetReceiveSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetReceiveSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetReceiveSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetReceiveSMSCompleted(Me, New GetReceiveSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCountAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCountAll(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String) As Integer
            Dim results() As Object = Me.Invoke("GetCountAll", New Object() {UserName, Pass, Domain})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCountAllAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String)
            Me.GetCountAllAsync(UserName, Pass, Domain, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCountAllAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal userState As Object)
            If (Me.GetCountAllOperationCompleted Is Nothing) Then
                Me.GetCountAllOperationCompleted = AddressOf Me.OnGetCountAllOperationCompleted
            End If
            Me.InvokeAsync("GetCountAll", New Object() {UserName, Pass, Domain}, Me.GetCountAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCountAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCountAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCountAllCompleted(Me, New GetCountAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCount", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCount(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal LineNumber As String) As Integer
            Dim results() As Object = Me.Invoke("GetCount", New Object() {UserName, Pass, Domain, LineNumber})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCountAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal LineNumber As String)
            Me.GetCountAsync(UserName, Pass, Domain, LineNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCountAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal LineNumber As String, ByVal userState As Object)
            If (Me.GetCountOperationCompleted Is Nothing) Then
                Me.GetCountOperationCompleted = AddressOf Me.OnGetCountOperationCompleted
            End If
            Me.InvokeAsync("GetCount", New Object() {UserName, Pass, Domain, LineNumber}, Me.GetCountOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCountCompleted(Me, New GetCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveMessaage", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReceiveMessaage(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal RecType As ReceiveSmsType, ByVal FromDate As String, ByVal ToDate As String, ByVal LineNumber As String) As ReceiveSMS()
            Dim results() As Object = Me.Invoke("ReceiveMessaage", New Object() {UserName, Pass, Domain, RecType, FromDate, ToDate, LineNumber})
            Return CType(results(0),ReceiveSMS())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReceiveMessaageAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal RecType As ReceiveSmsType, ByVal FromDate As String, ByVal ToDate As String, ByVal LineNumber As String)
            Me.ReceiveMessaageAsync(UserName, Pass, Domain, RecType, FromDate, ToDate, LineNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReceiveMessaageAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal RecType As ReceiveSmsType, ByVal FromDate As String, ByVal ToDate As String, ByVal LineNumber As String, ByVal userState As Object)
            If (Me.ReceiveMessaageOperationCompleted Is Nothing) Then
                Me.ReceiveMessaageOperationCompleted = AddressOf Me.OnReceiveMessaageOperationCompleted
            End If
            Me.InvokeAsync("ReceiveMessaage", New Object() {UserName, Pass, Domain, RecType, FromDate, ToDate, LineNumber}, Me.ReceiveMessaageOperationCompleted, userState)
        End Sub
        
        Private Sub OnReceiveMessaageOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReceiveMessaageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReceiveMessaageCompleted(Me, New ReceiveMessaageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendFutureSms", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendFutureSms(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal LineNumber As String, ByVal ReceiveNumber As String, ByVal [Date] As String, ByVal Time As String, ByVal SmsText As String) As Integer
            Dim results() As Object = Me.Invoke("SendFutureSms", New Object() {UserName, Pass, Domain, LineNumber, ReceiveNumber, [Date], Time, SmsText})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendFutureSmsAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal LineNumber As String, ByVal ReceiveNumber As String, ByVal [Date] As String, ByVal Time As String, ByVal SmsText As String)
            Me.SendFutureSmsAsync(UserName, Pass, Domain, LineNumber, ReceiveNumber, [Date], Time, SmsText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendFutureSmsAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal LineNumber As String, ByVal ReceiveNumber As String, ByVal [Date] As String, ByVal Time As String, ByVal SmsText As String, ByVal userState As Object)
            If (Me.SendFutureSmsOperationCompleted Is Nothing) Then
                Me.SendFutureSmsOperationCompleted = AddressOf Me.OnSendFutureSmsOperationCompleted
            End If
            Me.InvokeAsync("SendFutureSms", New Object() {UserName, Pass, Domain, LineNumber, ReceiveNumber, [Date], Time, SmsText}, Me.SendFutureSmsOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendFutureSmsOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendFutureSmsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendFutureSmsCompleted(Me, New SendFutureSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFutureSms", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteFutureSms(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal FutureId As Integer) As Integer
            Dim results() As Object = Me.Invoke("DeleteFutureSms", New Object() {UserName, Pass, Domain, FutureId})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteFutureSmsAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal FutureId As Integer)
            Me.DeleteFutureSmsAsync(UserName, Pass, Domain, FutureId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFutureSmsAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal FutureId As Integer, ByVal userState As Object)
            If (Me.DeleteFutureSmsOperationCompleted Is Nothing) Then
                Me.DeleteFutureSmsOperationCompleted = AddressOf Me.OnDeleteFutureSmsOperationCompleted
            End If
            Me.InvokeAsync("DeleteFutureSms", New Object() {UserName, Pass, Domain, FutureId}, Me.DeleteFutureSmsOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteFutureSmsOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteFutureSmsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteFutureSmsCompleted(Me, New DeleteFutureSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckSendFuture", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckSendFuture(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal FutureSmsId As Integer) As String
            Dim results() As Object = Me.Invoke("CheckSendFuture", New Object() {UserName, Pass, Domain, FutureSmsId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckSendFutureAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal FutureSmsId As Integer)
            Me.CheckSendFutureAsync(UserName, Pass, Domain, FutureSmsId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckSendFutureAsync(ByVal UserName As String, ByVal Pass As String, ByVal Domain As String, ByVal FutureSmsId As Integer, ByVal userState As Object)
            If (Me.CheckSendFutureOperationCompleted Is Nothing) Then
                Me.CheckSendFutureOperationCompleted = AddressOf Me.OnCheckSendFutureOperationCompleted
            End If
            Me.InvokeAsync("CheckSendFuture", New Object() {UserName, Pass, Domain, FutureSmsId}, Me.CheckSendFutureOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckSendFutureOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckSendFutureCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckSendFutureCompleted(Me, New CheckSendFutureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum SendType
        
        '''<remarks/>
        StaticText
        
        '''<remarks/>
        DynamicText
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum SmsMode
        
        '''<remarks/>
        Alert
        
        '''<remarks/>
        SaveInPhone
        
        '''<remarks/>
        SaveInSim
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum ReceiveType
        
        '''<remarks/>
        All
        
        '''<remarks/>
        UnRead
        
        '''<remarks/>
        Top
        
        '''<remarks/>
        Down
        
        '''<remarks/>
        WithDate
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class ReceiveSMS
        
        Private receiveNumberField As String
        
        Private smsTextField As String
        
        Private dateField As String
        
        Private timeField As String
        
        Private unReadField As String
        
        Private readField As String
        
        Private reciveCodeField As String
        
        Private fromNumberField As String
        
        Private errorField As Integer
        
        '''<remarks/>
        Public Property ReceiveNumber() As String
            Get
                Return Me.receiveNumberField
            End Get
            Set
                Me.receiveNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SmsText() As String
            Get
                Return Me.smsTextField
            End Get
            Set
                Me.smsTextField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Date]() As String
            Get
                Return Me.dateField
            End Get
            Set
                Me.dateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Time() As String
            Get
                Return Me.timeField
            End Get
            Set
                Me.timeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unRead() As String
            Get
                Return Me.unReadField
            End Get
            Set
                Me.unReadField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Read() As String
            Get
                Return Me.readField
            End Get
            Set
                Me.readField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property reciveCode() As String
            Get
                Return Me.reciveCodeField
            End Get
            Set
                Me.reciveCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FromNumber() As String
            Get
                Return Me.fromNumberField
            End Get
            Set
                Me.fromNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [Error]() As Integer
            Get
                Return Me.errorField
            End Get
            Set
                Me.errorField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum ReceiveSmsType
        
        '''<remarks/>
        WithDate
        
        '''<remarks/>
        CurrentDate
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SmsSendCompletedEventHandler(ByVal sender As Object, ByVal e As SmsSendCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SmsSendCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SendSmsCompletedEventHandler(ByVal sender As Object, ByVal e As SendSmsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendSmsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SendSingleSmsCompletedEventHandler(ByVal sender As Object, ByVal e As SendSingleSmsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendSingleSmsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub getCreditCompletedEventHandler(ByVal sender As Object, ByVal e As getCreditCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCreditCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetReceiveSMSWithNumberCompletedEventHandler(ByVal sender As Object, ByVal e As GetReceiveSMSWithNumberCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetReceiveSMSWithNumberCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReceiveSMS()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReceiveSMS())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ReadReceiveSMSCompletedEventHandler(ByVal sender As Object, ByVal e As ReadReceiveSMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReadReceiveSMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Nullable(Of Boolean)
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Nullable(Of Boolean))
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DeleteReceiveSMSCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteReceiveSMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteReceiveSMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDeliveryCompletedEventHandler(ByVal sender As Object, ByVal e As GetDeliveryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDeliveryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetLastDeliveryCompletedEventHandler(ByVal sender As Object, ByVal e As GetLastDeliveryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLastDeliveryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetSingleDeliveryCompletedEventHandler(ByVal sender As Object, ByVal e As GetSingleDeliveryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSingleDeliveryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAllDeliveryCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllDeliveryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllDeliveryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetReadReceiveSMSCompletedEventHandler(ByVal sender As Object, ByVal e As GetReadReceiveSMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetReadReceiveSMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReceiveSMS()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReceiveSMS())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetReceiveSMSCompletedEventHandler(ByVal sender As Object, ByVal e As GetReceiveSMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetReceiveSMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReceiveSMS()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReceiveSMS())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetCountAllCompletedEventHandler(ByVal sender As Object, ByVal e As GetCountAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCountAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetCountCompletedEventHandler(ByVal sender As Object, ByVal e As GetCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ReceiveMessaageCompletedEventHandler(ByVal sender As Object, ByVal e As ReceiveMessaageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReceiveMessaageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReceiveSMS()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReceiveSMS())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SendFutureSmsCompletedEventHandler(ByVal sender As Object, ByVal e As SendFutureSmsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendFutureSmsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DeleteFutureSmsCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteFutureSmsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteFutureSmsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CheckSendFutureCompletedEventHandler(ByVal sender As Object, ByVal e As CheckSendFutureCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckSendFutureCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
