<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="UcSearcherUserTypes.UCIcon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>