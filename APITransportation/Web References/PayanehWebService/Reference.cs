//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace APITransportation.PayanehWebService {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PayanehWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class PayanehWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback WebMethodLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodGetDSPersonnelFingerPrintsOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodReportingInformationPrividerLoadPermissionsByAHSGsOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodReportingInformationPrividerLoadPermissionsBySeqTsOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodReportingInformationPrividerSedimentedLoadsReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodReportingInformationPrividerTruckersAssociationFinancialReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodReportingInformationPrividerContractorCompanyFinancialReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodReportingInformationPrividerDriverTruckLoadsReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionByAHSGsOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionBySeqtsOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodReportingInformationProviderTransportPriceTariffsReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodReportingInformationPrividerClearanceLoadsReportReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodReportingInformationPrividerAnnounceLoadsReportReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodReportingInformationPrividerSaleOfCommissionSMSReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodCarTruckHasTurnOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodISCompanyActiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodGetTruckDriverByNationalCodefromRMTOOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebMethodGetTruckBySmartCarNofromRMTOOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PayanehWebService() {
            this.Url = global::APITransportation.Properties.Settings.Default.APITransportation_PayanehWebService_PayanehWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event WebMethodLoginCompletedEventHandler WebMethodLoginCompleted;
        
        /// <remarks/>
        public event WebMethodGetDSPersonnelFingerPrintsCompletedEventHandler WebMethodGetDSPersonnelFingerPrintsCompleted;
        
        /// <remarks/>
        public event WebMethodReportingInformationPrividerLoadPermissionsByAHSGsCompletedEventHandler WebMethodReportingInformationPrividerLoadPermissionsByAHSGsCompleted;
        
        /// <remarks/>
        public event WebMethodReportingInformationPrividerLoadPermissionsBySeqTsCompletedEventHandler WebMethodReportingInformationPrividerLoadPermissionsBySeqTsCompleted;
        
        /// <remarks/>
        public event WebMethodReportingInformationPrividerSedimentedLoadsReportCompletedEventHandler WebMethodReportingInformationPrividerSedimentedLoadsReportCompleted;
        
        /// <remarks/>
        public event WebMethodReportingInformationPrividerTruckersAssociationFinancialReportCompletedEventHandler WebMethodReportingInformationPrividerTruckersAssociationFinancialReportCompleted;
        
        /// <remarks/>
        public event WebMethodReportingInformationPrividerContractorCompanyFinancialReportCompletedEventHandler WebMethodReportingInformationPrividerContractorCompanyFinancialReportCompleted;
        
        /// <remarks/>
        public event WebMethodReportingInformationPrividerDriverTruckLoadsReportCompletedEventHandler WebMethodReportingInformationPrividerDriverTruckLoadsReportCompleted;
        
        /// <remarks/>
        public event WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportCompletedEventHandler WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportCompleted;
        
        /// <remarks/>
        public event WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportCompletedEventHandler WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportCompleted;
        
        /// <remarks/>
        public event WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportCompletedEventHandler WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportCompleted;
        
        /// <remarks/>
        public event WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportCompletedEventHandler WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportCompleted;
        
        /// <remarks/>
        public event WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionByAHSGsCompletedEventHandler WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionByAHSGsCompleted;
        
        /// <remarks/>
        public event WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionBySeqtsCompletedEventHandler WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionBySeqtsCompleted;
        
        /// <remarks/>
        public event WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportCompletedEventHandler WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportCompleted;
        
        /// <remarks/>
        public event WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportCompletedEventHandler WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportCompleted;
        
        /// <remarks/>
        public event WebMethodReportingInformationProviderTransportPriceTariffsReportCompletedEventHandler WebMethodReportingInformationProviderTransportPriceTariffsReportCompleted;
        
        /// <remarks/>
        public event WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportCompletedEventHandler WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportCompleted;
        
        /// <remarks/>
        public event WebMethodReportingInformationPrividerClearanceLoadsReportReportCompletedEventHandler WebMethodReportingInformationPrividerClearanceLoadsReportReportCompleted;
        
        /// <remarks/>
        public event WebMethodReportingInformationPrividerAnnounceLoadsReportReportCompletedEventHandler WebMethodReportingInformationPrividerAnnounceLoadsReportReportCompleted;
        
        /// <remarks/>
        public event WebMethodReportingInformationPrividerSaleOfCommissionSMSReportCompletedEventHandler WebMethodReportingInformationPrividerSaleOfCommissionSMSReportCompleted;
        
        /// <remarks/>
        public event WebMethodCarTruckHasTurnCompletedEventHandler WebMethodCarTruckHasTurnCompleted;
        
        /// <remarks/>
        public event WebMethodISCompanyActiveCompletedEventHandler WebMethodISCompanyActiveCompleted;
        
        /// <remarks/>
        public event WebMethodGetTruckDriverByNationalCodefromRMTOCompletedEventHandler WebMethodGetTruckDriverByNationalCodefromRMTOCompleted;
        
        /// <remarks/>
        public event WebMethodGetTruckBySmartCarNofromRMTOCompletedEventHandler WebMethodGetTruckBySmartCarNofromRMTOCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long WebMethodLogin(string YourUserShenaseh, string YourUserPassword) {
            object[] results = this.Invoke("WebMethodLogin", new object[] {
                        YourUserShenaseh,
                        YourUserPassword});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void WebMethodLoginAsync(string YourUserShenaseh, string YourUserPassword) {
            this.WebMethodLoginAsync(YourUserShenaseh, YourUserPassword, null);
        }
        
        /// <remarks/>
        public void WebMethodLoginAsync(string YourUserShenaseh, string YourUserPassword, object userState) {
            if ((this.WebMethodLoginOperationCompleted == null)) {
                this.WebMethodLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodLoginOperationCompleted);
            }
            this.InvokeAsync("WebMethodLogin", new object[] {
                        YourUserShenaseh,
                        YourUserPassword}, this.WebMethodLoginOperationCompleted, userState);
        }
        
        private void OnWebMethodLoginOperationCompleted(object arg) {
            if ((this.WebMethodLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodLoginCompleted(this, new WebMethodLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodGetDSPersonnelFingerPrints", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet WebMethodGetDSPersonnelFingerPrints(string YourSalFull, string YourMonthCodeFull, long YourComputerId, long YourExchangeKey) {
            object[] results = this.Invoke("WebMethodGetDSPersonnelFingerPrints", new object[] {
                        YourSalFull,
                        YourMonthCodeFull,
                        YourComputerId,
                        YourExchangeKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void WebMethodGetDSPersonnelFingerPrintsAsync(string YourSalFull, string YourMonthCodeFull, long YourComputerId, long YourExchangeKey) {
            this.WebMethodGetDSPersonnelFingerPrintsAsync(YourSalFull, YourMonthCodeFull, YourComputerId, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodGetDSPersonnelFingerPrintsAsync(string YourSalFull, string YourMonthCodeFull, long YourComputerId, long YourExchangeKey, object userState) {
            if ((this.WebMethodGetDSPersonnelFingerPrintsOperationCompleted == null)) {
                this.WebMethodGetDSPersonnelFingerPrintsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodGetDSPersonnelFingerPrintsOperationCompleted);
            }
            this.InvokeAsync("WebMethodGetDSPersonnelFingerPrints", new object[] {
                        YourSalFull,
                        YourMonthCodeFull,
                        YourComputerId,
                        YourExchangeKey}, this.WebMethodGetDSPersonnelFingerPrintsOperationCompleted, userState);
        }
        
        private void OnWebMethodGetDSPersonnelFingerPrintsOperationCompleted(object arg) {
            if ((this.WebMethodGetDSPersonnelFingerPrintsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodGetDSPersonnelFingerPrintsCompleted(this, new WebMethodGetDSPersonnelFingerPrintsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerLoadPermissionsByAHSGs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WebMethodReportingInformationPrividerLoadPermissionsByAHSGs(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourAHId, long YourAHSGId, long YourExchangeKey) {
            this.Invoke("WebMethodReportingInformationPrividerLoadPermissionsByAHSGs", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourAHId,
                        YourAHSGId,
                        YourExchangeKey});
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerLoadPermissionsByAHSGsAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourAHId, long YourAHSGId, long YourExchangeKey) {
            this.WebMethodReportingInformationPrividerLoadPermissionsByAHSGsAsync(YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourAHId, YourAHSGId, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerLoadPermissionsByAHSGsAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourAHId, long YourAHSGId, long YourExchangeKey, object userState) {
            if ((this.WebMethodReportingInformationPrividerLoadPermissionsByAHSGsOperationCompleted == null)) {
                this.WebMethodReportingInformationPrividerLoadPermissionsByAHSGsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodReportingInformationPrividerLoadPermissionsByAHSGsOperationCompleted);
            }
            this.InvokeAsync("WebMethodReportingInformationPrividerLoadPermissionsByAHSGs", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourAHId,
                        YourAHSGId,
                        YourExchangeKey}, this.WebMethodReportingInformationPrividerLoadPermissionsByAHSGsOperationCompleted, userState);
        }
        
        private void OnWebMethodReportingInformationPrividerLoadPermissionsByAHSGsOperationCompleted(object arg) {
            if ((this.WebMethodReportingInformationPrividerLoadPermissionsByAHSGsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodReportingInformationPrividerLoadPermissionsByAHSGsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerLoadPermissionsBySeqTs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WebMethodReportingInformationPrividerLoadPermissionsBySeqTs(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourSeqTId, long YourExchangeKey) {
            this.Invoke("WebMethodReportingInformationPrividerLoadPermissionsBySeqTs", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourSeqTId,
                        YourExchangeKey});
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerLoadPermissionsBySeqTsAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourSeqTId, long YourExchangeKey) {
            this.WebMethodReportingInformationPrividerLoadPermissionsBySeqTsAsync(YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourSeqTId, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerLoadPermissionsBySeqTsAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourSeqTId, long YourExchangeKey, object userState) {
            if ((this.WebMethodReportingInformationPrividerLoadPermissionsBySeqTsOperationCompleted == null)) {
                this.WebMethodReportingInformationPrividerLoadPermissionsBySeqTsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodReportingInformationPrividerLoadPermissionsBySeqTsOperationCompleted);
            }
            this.InvokeAsync("WebMethodReportingInformationPrividerLoadPermissionsBySeqTs", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourSeqTId,
                        YourExchangeKey}, this.WebMethodReportingInformationPrividerLoadPermissionsBySeqTsOperationCompleted, userState);
        }
        
        private void OnWebMethodReportingInformationPrividerLoadPermissionsBySeqTsOperationCompleted(object arg) {
            if ((this.WebMethodReportingInformationPrividerLoadPermissionsBySeqTsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodReportingInformationPrividerLoadPermissionsBySeqTsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerSedimentedLoadsReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WebMethodReportingInformationPrividerSedimentedLoadsReport(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourAnnouncementHallId, int YourSedimentedLoadsReportType, long YourExchangeKey) {
            this.Invoke("WebMethodReportingInformationPrividerSedimentedLoadsReport", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourAnnouncementHallId,
                        YourSedimentedLoadsReportType,
                        YourExchangeKey});
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerSedimentedLoadsReportAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourAnnouncementHallId, int YourSedimentedLoadsReportType, long YourExchangeKey) {
            this.WebMethodReportingInformationPrividerSedimentedLoadsReportAsync(YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourAnnouncementHallId, YourSedimentedLoadsReportType, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerSedimentedLoadsReportAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourAnnouncementHallId, int YourSedimentedLoadsReportType, long YourExchangeKey, object userState) {
            if ((this.WebMethodReportingInformationPrividerSedimentedLoadsReportOperationCompleted == null)) {
                this.WebMethodReportingInformationPrividerSedimentedLoadsReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodReportingInformationPrividerSedimentedLoadsReportOperationCompleted);
            }
            this.InvokeAsync("WebMethodReportingInformationPrividerSedimentedLoadsReport", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourAnnouncementHallId,
                        YourSedimentedLoadsReportType,
                        YourExchangeKey}, this.WebMethodReportingInformationPrividerSedimentedLoadsReportOperationCompleted, userState);
        }
        
        private void OnWebMethodReportingInformationPrividerSedimentedLoadsReportOperationCompleted(object arg) {
            if ((this.WebMethodReportingInformationPrividerSedimentedLoadsReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodReportingInformationPrividerSedimentedLoadsReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerTruckersAssociationFinanc" +
            "ialReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WebMethodReportingInformationPrividerTruckersAssociationFinancialReport(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourExchangeKey) {
            this.Invoke("WebMethodReportingInformationPrividerTruckersAssociationFinancialReport", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourExchangeKey});
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerTruckersAssociationFinancialReportAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourExchangeKey) {
            this.WebMethodReportingInformationPrividerTruckersAssociationFinancialReportAsync(YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerTruckersAssociationFinancialReportAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourExchangeKey, object userState) {
            if ((this.WebMethodReportingInformationPrividerTruckersAssociationFinancialReportOperationCompleted == null)) {
                this.WebMethodReportingInformationPrividerTruckersAssociationFinancialReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodReportingInformationPrividerTruckersAssociationFinancialReportOperationCompleted);
            }
            this.InvokeAsync("WebMethodReportingInformationPrividerTruckersAssociationFinancialReport", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourExchangeKey}, this.WebMethodReportingInformationPrividerTruckersAssociationFinancialReportOperationCompleted, userState);
        }
        
        private void OnWebMethodReportingInformationPrividerTruckersAssociationFinancialReportOperationCompleted(object arg) {
            if ((this.WebMethodReportingInformationPrividerTruckersAssociationFinancialReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodReportingInformationPrividerTruckersAssociationFinancialReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerContractorCompanyFinancia" +
            "lReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WebMethodReportingInformationPrividerContractorCompanyFinancialReport(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, bool YourVatStatus, long YourExchangeKey) {
            this.Invoke("WebMethodReportingInformationPrividerContractorCompanyFinancialReport", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourVatStatus,
                        YourExchangeKey});
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerContractorCompanyFinancialReportAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, bool YourVatStatus, long YourExchangeKey) {
            this.WebMethodReportingInformationPrividerContractorCompanyFinancialReportAsync(YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourVatStatus, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerContractorCompanyFinancialReportAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, bool YourVatStatus, long YourExchangeKey, object userState) {
            if ((this.WebMethodReportingInformationPrividerContractorCompanyFinancialReportOperationCompleted == null)) {
                this.WebMethodReportingInformationPrividerContractorCompanyFinancialReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodReportingInformationPrividerContractorCompanyFinancialReportOperationCompleted);
            }
            this.InvokeAsync("WebMethodReportingInformationPrividerContractorCompanyFinancialReport", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourVatStatus,
                        YourExchangeKey}, this.WebMethodReportingInformationPrividerContractorCompanyFinancialReportOperationCompleted, userState);
        }
        
        private void OnWebMethodReportingInformationPrividerContractorCompanyFinancialReportOperationCompleted(object arg) {
            if ((this.WebMethodReportingInformationPrividerContractorCompanyFinancialReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodReportingInformationPrividerContractorCompanyFinancialReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerDriverTruckLoadsReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WebMethodReportingInformationPrividerDriverTruckLoadsReport(long YourDriverId, System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourExchangeKey) {
            this.Invoke("WebMethodReportingInformationPrividerDriverTruckLoadsReport", new object[] {
                        YourDriverId,
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourExchangeKey});
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerDriverTruckLoadsReportAsync(long YourDriverId, System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourExchangeKey) {
            this.WebMethodReportingInformationPrividerDriverTruckLoadsReportAsync(YourDriverId, YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerDriverTruckLoadsReportAsync(long YourDriverId, System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourExchangeKey, object userState) {
            if ((this.WebMethodReportingInformationPrividerDriverTruckLoadsReportOperationCompleted == null)) {
                this.WebMethodReportingInformationPrividerDriverTruckLoadsReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodReportingInformationPrividerDriverTruckLoadsReportOperationCompleted);
            }
            this.InvokeAsync("WebMethodReportingInformationPrividerDriverTruckLoadsReport", new object[] {
                        YourDriverId,
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourExchangeKey}, this.WebMethodReportingInformationPrividerDriverTruckLoadsReportOperationCompleted, userState);
        }
        
        private void OnWebMethodReportingInformationPrividerDriverTruckLoadsReportOperationCompleted(object arg) {
            if ((this.WebMethodReportingInformationPrividerDriverTruckLoadsReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodReportingInformationPrividerDriverTruckLoadsReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerCapacitorLoadsforAnnounce" +
            "Report", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReport(long YourAnnouncementHallId, long YourAnnouncementHallSubGroupId, long YourExchangeKey) {
            this.Invoke("WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReport", new object[] {
                        YourAnnouncementHallId,
                        YourAnnouncementHallSubGroupId,
                        YourExchangeKey});
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportAsync(long YourAnnouncementHallId, long YourAnnouncementHallSubGroupId, long YourExchangeKey) {
            this.WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportAsync(YourAnnouncementHallId, YourAnnouncementHallSubGroupId, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportAsync(long YourAnnouncementHallId, long YourAnnouncementHallSubGroupId, long YourExchangeKey, object userState) {
            if ((this.WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportOperationCompleted == null)) {
                this.WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportOperationCompleted);
            }
            this.InvokeAsync("WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReport", new object[] {
                        YourAnnouncementHallId,
                        YourAnnouncementHallSubGroupId,
                        YourExchangeKey}, this.WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportOperationCompleted, userState);
        }
        
        private void OnWebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportOperationCompleted(object arg) {
            if ((this.WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerCapacitorLoadsTransportCo" +
            "mpaniesRegisteredLoadsReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReport(long YourAHId, long YourAHSGId, long YourCompanyCode, System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourTargetCityId, long YourSoftwareUserId, long YourExchangeKey) {
            this.Invoke("WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLo" +
                    "adsReport", new object[] {
                        YourAHId,
                        YourAHSGId,
                        YourCompanyCode,
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourTargetCityId,
                        YourSoftwareUserId,
                        YourExchangeKey});
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportAsync(long YourAHId, long YourAHSGId, long YourCompanyCode, System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourTargetCityId, long YourSoftwareUserId, long YourExchangeKey) {
            this.WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportAsync(YourAHId, YourAHSGId, YourCompanyCode, YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourTargetCityId, YourSoftwareUserId, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportAsync(long YourAHId, long YourAHSGId, long YourCompanyCode, System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourTargetCityId, long YourSoftwareUserId, long YourExchangeKey, object userState) {
            if ((this.WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportOperationCompleted == null)) {
                this.WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportOperationCompleted);
            }
            this.InvokeAsync("WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLo" +
                    "adsReport", new object[] {
                        YourAHId,
                        YourAHSGId,
                        YourCompanyCode,
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourTargetCityId,
                        YourSoftwareUserId,
                        YourExchangeKey}, this.WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportOperationCompleted, userState);
        }
        
        private void OnWebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportOperationCompleted(object arg) {
            if ((this.WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerAnnouncementHallsPerforma" +
            "nceReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReport(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourAHId, long YourExchangeKey) {
            this.Invoke("WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReport", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourAHId,
                        YourExchangeKey});
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourAHId, long YourExchangeKey) {
            this.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportAsync(YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourAHId, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourAHId, long YourExchangeKey, object userState) {
            if ((this.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportOperationCompleted == null)) {
                this.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportOperationCompleted);
            }
            this.InvokeAsync("WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReport", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourAHId,
                        YourExchangeKey}, this.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportOperationCompleted, userState);
        }
        
        private void OnWebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportOperationCompleted(object arg) {
            if ((this.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerAnnouncementHallsPerforma" +
            "nceGeneralStatisticsReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReport(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourExchangeKey) {
            this.Invoke("WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatistic" +
                    "sReport", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourExchangeKey});
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourExchangeKey) {
            this.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportAsync(YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourExchangeKey, object userState) {
            if ((this.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportOperationCompleted == null)) {
                this.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportOperationCompleted);
            }
            this.InvokeAsync("WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatistic" +
                    "sReport", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourExchangeKey}, this.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportOperationCompleted, userState);
        }
        
        private void OnWebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportOperationCompleted(object arg) {
            if ((this.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerTruckDriversWaitingToGetL" +
            "oadPermissionByAHSGs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionByAHSGs(long YourAnnouncementHallSubGroupId, long YourExchangeKey) {
            this.Invoke("WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionByAHSG" +
                    "s", new object[] {
                        YourAnnouncementHallSubGroupId,
                        YourExchangeKey});
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionByAHSGsAsync(long YourAnnouncementHallSubGroupId, long YourExchangeKey) {
            this.WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionByAHSGsAsync(YourAnnouncementHallSubGroupId, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionByAHSGsAsync(long YourAnnouncementHallSubGroupId, long YourExchangeKey, object userState) {
            if ((this.WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionByAHSGsOperationCompleted == null)) {
                this.WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionByAHSGsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionByAHSGsOperationCompleted);
            }
            this.InvokeAsync("WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionByAHSG" +
                    "s", new object[] {
                        YourAnnouncementHallSubGroupId,
                        YourExchangeKey}, this.WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionByAHSGsOperationCompleted, userState);
        }
        
        private void OnWebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionByAHSGsOperationCompleted(object arg) {
            if ((this.WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionByAHSGsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionByAHSGsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerTruckDriversWaitingToGetL" +
            "oadPermissionBySeqts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionBySeqts(long YourSeqTId, long YourExchangeKey) {
            this.Invoke("WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionBySeqt" +
                    "s", new object[] {
                        YourSeqTId,
                        YourExchangeKey});
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionBySeqtsAsync(long YourSeqTId, long YourExchangeKey) {
            this.WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionBySeqtsAsync(YourSeqTId, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionBySeqtsAsync(long YourSeqTId, long YourExchangeKey, object userState) {
            if ((this.WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionBySeqtsOperationCompleted == null)) {
                this.WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionBySeqtsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionBySeqtsOperationCompleted);
            }
            this.InvokeAsync("WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionBySeqt" +
                    "s", new object[] {
                        YourSeqTId,
                        YourExchangeKey}, this.WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionBySeqtsOperationCompleted, userState);
        }
        
        private void OnWebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionBySeqtsOperationCompleted(object arg) {
            if ((this.WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionBySeqtsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionBySeqtsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysT" +
            "oGetLoadPermissionReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReport(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourAnnouncementHallId, long YourExchangeKey) {
            this.Invoke("WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionR" +
                    "eport", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourAnnouncementHallId,
                        YourExchangeKey});
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourAnnouncementHallId, long YourExchangeKey) {
            this.WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportAsync(YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourAnnouncementHallId, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourAnnouncementHallId, long YourExchangeKey, object userState) {
            if ((this.WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportOperationCompleted == null)) {
                this.WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportOperationCompleted);
            }
            this.InvokeAsync("WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionR" +
                    "eport", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourAnnouncementHallId,
                        YourExchangeKey}, this.WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportOperationCompleted, userState);
        }
        
        private void OnWebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportOperationCompleted(object arg) {
            if ((this.WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerTravelLengthOfLoadTargets" +
            "Report", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReport(long YourExchangeKey) {
            this.Invoke("WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReport", new object[] {
                        YourExchangeKey});
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportAsync(long YourExchangeKey) {
            this.WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportAsync(YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportAsync(long YourExchangeKey, object userState) {
            if ((this.WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportOperationCompleted == null)) {
                this.WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportOperationCompleted);
            }
            this.InvokeAsync("WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReport", new object[] {
                        YourExchangeKey}, this.WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportOperationCompleted, userState);
        }
        
        private void OnWebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportOperationCompleted(object arg) {
            if ((this.WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationProviderTransportPriceTariffsRepo" +
            "rt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WebMethodReportingInformationProviderTransportPriceTariffsReport(long YourAnnouncementHallId, long YourAnnouncementHallSubGroupId, bool YourOActiveStatus, long YourExchangeKey) {
            this.Invoke("WebMethodReportingInformationProviderTransportPriceTariffsReport", new object[] {
                        YourAnnouncementHallId,
                        YourAnnouncementHallSubGroupId,
                        YourOActiveStatus,
                        YourExchangeKey});
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationProviderTransportPriceTariffsReportAsync(long YourAnnouncementHallId, long YourAnnouncementHallSubGroupId, bool YourOActiveStatus, long YourExchangeKey) {
            this.WebMethodReportingInformationProviderTransportPriceTariffsReportAsync(YourAnnouncementHallId, YourAnnouncementHallSubGroupId, YourOActiveStatus, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationProviderTransportPriceTariffsReportAsync(long YourAnnouncementHallId, long YourAnnouncementHallSubGroupId, bool YourOActiveStatus, long YourExchangeKey, object userState) {
            if ((this.WebMethodReportingInformationProviderTransportPriceTariffsReportOperationCompleted == null)) {
                this.WebMethodReportingInformationProviderTransportPriceTariffsReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodReportingInformationProviderTransportPriceTariffsReportOperationCompleted);
            }
            this.InvokeAsync("WebMethodReportingInformationProviderTransportPriceTariffsReport", new object[] {
                        YourAnnouncementHallId,
                        YourAnnouncementHallSubGroupId,
                        YourOActiveStatus,
                        YourExchangeKey}, this.WebMethodReportingInformationProviderTransportPriceTariffsReportOperationCompleted, userState);
        }
        
        private void OnWebMethodReportingInformationProviderTransportPriceTariffsReportOperationCompleted(object arg) {
            if ((this.WebMethodReportingInformationProviderTransportPriceTariffsReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodReportingInformationProviderTransportPriceTariffsReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationProviderIndigenousTrucksWithUNNat" +
            "iveLPReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReport(long YourExchangeKey) {
            this.Invoke("WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReport", new object[] {
                        YourExchangeKey});
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportAsync(long YourExchangeKey) {
            this.WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportAsync(YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportAsync(long YourExchangeKey, object userState) {
            if ((this.WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportOperationCompleted == null)) {
                this.WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportOperationCompleted);
            }
            this.InvokeAsync("WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReport", new object[] {
                        YourExchangeKey}, this.WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportOperationCompleted, userState);
        }
        
        private void OnWebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportOperationCompleted(object arg) {
            if ((this.WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerClearanceLoadsReportRepor" +
            "t", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WebMethodReportingInformationPrividerClearanceLoadsReportReport(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourAHId, long YourAHSGId, long YourExchangeKey) {
            this.Invoke("WebMethodReportingInformationPrividerClearanceLoadsReportReport", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourAHId,
                        YourAHSGId,
                        YourExchangeKey});
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerClearanceLoadsReportReportAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourAHId, long YourAHSGId, long YourExchangeKey) {
            this.WebMethodReportingInformationPrividerClearanceLoadsReportReportAsync(YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourAHId, YourAHSGId, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerClearanceLoadsReportReportAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourAHId, long YourAHSGId, long YourExchangeKey, object userState) {
            if ((this.WebMethodReportingInformationPrividerClearanceLoadsReportReportOperationCompleted == null)) {
                this.WebMethodReportingInformationPrividerClearanceLoadsReportReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodReportingInformationPrividerClearanceLoadsReportReportOperationCompleted);
            }
            this.InvokeAsync("WebMethodReportingInformationPrividerClearanceLoadsReportReport", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourAHId,
                        YourAHSGId,
                        YourExchangeKey}, this.WebMethodReportingInformationPrividerClearanceLoadsReportReportOperationCompleted, userState);
        }
        
        private void OnWebMethodReportingInformationPrividerClearanceLoadsReportReportOperationCompleted(object arg) {
            if ((this.WebMethodReportingInformationPrividerClearanceLoadsReportReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodReportingInformationPrividerClearanceLoadsReportReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerAnnounceLoadsReportReport" +
            "", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WebMethodReportingInformationPrividerAnnounceLoadsReportReport(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourAHId, long YourAHSGId, long YourExchangeKey) {
            this.Invoke("WebMethodReportingInformationPrividerAnnounceLoadsReportReport", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourAHId,
                        YourAHSGId,
                        YourExchangeKey});
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerAnnounceLoadsReportReportAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourAHId, long YourAHSGId, long YourExchangeKey) {
            this.WebMethodReportingInformationPrividerAnnounceLoadsReportReportAsync(YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourAHId, YourAHSGId, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerAnnounceLoadsReportReportAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourAHId, long YourAHSGId, long YourExchangeKey, object userState) {
            if ((this.WebMethodReportingInformationPrividerAnnounceLoadsReportReportOperationCompleted == null)) {
                this.WebMethodReportingInformationPrividerAnnounceLoadsReportReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodReportingInformationPrividerAnnounceLoadsReportReportOperationCompleted);
            }
            this.InvokeAsync("WebMethodReportingInformationPrividerAnnounceLoadsReportReport", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourAHId,
                        YourAHSGId,
                        YourExchangeKey}, this.WebMethodReportingInformationPrividerAnnounceLoadsReportReportOperationCompleted, userState);
        }
        
        private void OnWebMethodReportingInformationPrividerAnnounceLoadsReportReportOperationCompleted(object arg) {
            if ((this.WebMethodReportingInformationPrividerAnnounceLoadsReportReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodReportingInformationPrividerAnnounceLoadsReportReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerSaleOfCommissionSMSReport" +
            "", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WebMethodReportingInformationPrividerSaleOfCommissionSMSReport(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourExchangeKey) {
            this.Invoke("WebMethodReportingInformationPrividerSaleOfCommissionSMSReport", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourExchangeKey});
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerSaleOfCommissionSMSReportAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourExchangeKey) {
            this.WebMethodReportingInformationPrividerSaleOfCommissionSMSReportAsync(YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodReportingInformationPrividerSaleOfCommissionSMSReportAsync(System.DateTime YourDateTimeMilladi1, string YourDateShamsiFull1, string YourTime1, System.DateTime YourDateTimeMilladi2, string YourDateShamsiFull2, string YourTime2, long YourExchangeKey, object userState) {
            if ((this.WebMethodReportingInformationPrividerSaleOfCommissionSMSReportOperationCompleted == null)) {
                this.WebMethodReportingInformationPrividerSaleOfCommissionSMSReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodReportingInformationPrividerSaleOfCommissionSMSReportOperationCompleted);
            }
            this.InvokeAsync("WebMethodReportingInformationPrividerSaleOfCommissionSMSReport", new object[] {
                        YourDateTimeMilladi1,
                        YourDateShamsiFull1,
                        YourTime1,
                        YourDateTimeMilladi2,
                        YourDateShamsiFull2,
                        YourTime2,
                        YourExchangeKey}, this.WebMethodReportingInformationPrividerSaleOfCommissionSMSReportOperationCompleted, userState);
        }
        
        private void OnWebMethodReportingInformationPrividerSaleOfCommissionSMSReportOperationCompleted(object arg) {
            if ((this.WebMethodReportingInformationPrividerSaleOfCommissionSMSReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodReportingInformationPrividerSaleOfCommissionSMSReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodCarTruckHasTurn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WebMethodCarTruckHasTurn(string YourPelak, string YourSerial, long YourExchangeKey) {
            object[] results = this.Invoke("WebMethodCarTruckHasTurn", new object[] {
                        YourPelak,
                        YourSerial,
                        YourExchangeKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WebMethodCarTruckHasTurnAsync(string YourPelak, string YourSerial, long YourExchangeKey) {
            this.WebMethodCarTruckHasTurnAsync(YourPelak, YourSerial, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodCarTruckHasTurnAsync(string YourPelak, string YourSerial, long YourExchangeKey, object userState) {
            if ((this.WebMethodCarTruckHasTurnOperationCompleted == null)) {
                this.WebMethodCarTruckHasTurnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodCarTruckHasTurnOperationCompleted);
            }
            this.InvokeAsync("WebMethodCarTruckHasTurn", new object[] {
                        YourPelak,
                        YourSerial,
                        YourExchangeKey}, this.WebMethodCarTruckHasTurnOperationCompleted, userState);
        }
        
        private void OnWebMethodCarTruckHasTurnOperationCompleted(object arg) {
            if ((this.WebMethodCarTruckHasTurnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodCarTruckHasTurnCompleted(this, new WebMethodCarTruckHasTurnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodISCompanyActive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WebMethodISCompanyActive(long YourCompanyCode, long YourExchangeKey) {
            object[] results = this.Invoke("WebMethodISCompanyActive", new object[] {
                        YourCompanyCode,
                        YourExchangeKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WebMethodISCompanyActiveAsync(long YourCompanyCode, long YourExchangeKey) {
            this.WebMethodISCompanyActiveAsync(YourCompanyCode, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodISCompanyActiveAsync(long YourCompanyCode, long YourExchangeKey, object userState) {
            if ((this.WebMethodISCompanyActiveOperationCompleted == null)) {
                this.WebMethodISCompanyActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodISCompanyActiveOperationCompleted);
            }
            this.InvokeAsync("WebMethodISCompanyActive", new object[] {
                        YourCompanyCode,
                        YourExchangeKey}, this.WebMethodISCompanyActiveOperationCompleted, userState);
        }
        
        private void OnWebMethodISCompanyActiveOperationCompleted(object arg) {
            if ((this.WebMethodISCompanyActiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodISCompanyActiveCompleted(this, new WebMethodISCompanyActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodGetTruckDriverByNationalCodefromRMTO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public R2CoreTransportationAndLoadNotificationTruckDriver WebMethodGetTruckDriverByNationalCodefromRMTO(string YourNationalCode, long YourExchangeKey) {
            object[] results = this.Invoke("WebMethodGetTruckDriverByNationalCodefromRMTO", new object[] {
                        YourNationalCode,
                        YourExchangeKey});
            return ((R2CoreTransportationAndLoadNotificationTruckDriver)(results[0]));
        }
        
        /// <remarks/>
        public void WebMethodGetTruckDriverByNationalCodefromRMTOAsync(string YourNationalCode, long YourExchangeKey) {
            this.WebMethodGetTruckDriverByNationalCodefromRMTOAsync(YourNationalCode, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodGetTruckDriverByNationalCodefromRMTOAsync(string YourNationalCode, long YourExchangeKey, object userState) {
            if ((this.WebMethodGetTruckDriverByNationalCodefromRMTOOperationCompleted == null)) {
                this.WebMethodGetTruckDriverByNationalCodefromRMTOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodGetTruckDriverByNationalCodefromRMTOOperationCompleted);
            }
            this.InvokeAsync("WebMethodGetTruckDriverByNationalCodefromRMTO", new object[] {
                        YourNationalCode,
                        YourExchangeKey}, this.WebMethodGetTruckDriverByNationalCodefromRMTOOperationCompleted, userState);
        }
        
        private void OnWebMethodGetTruckDriverByNationalCodefromRMTOOperationCompleted(object arg) {
            if ((this.WebMethodGetTruckDriverByNationalCodefromRMTOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodGetTruckDriverByNationalCodefromRMTOCompleted(this, new WebMethodGetTruckDriverByNationalCodefromRMTOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodGetTruckBySmartCarNofromRMTO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public R2CoreTransportationAndLoadNotificationTruck WebMethodGetTruckBySmartCarNofromRMTO(string YourSmartCardNo, long YourExchangeKey) {
            object[] results = this.Invoke("WebMethodGetTruckBySmartCarNofromRMTO", new object[] {
                        YourSmartCardNo,
                        YourExchangeKey});
            return ((R2CoreTransportationAndLoadNotificationTruck)(results[0]));
        }
        
        /// <remarks/>
        public void WebMethodGetTruckBySmartCarNofromRMTOAsync(string YourSmartCardNo, long YourExchangeKey) {
            this.WebMethodGetTruckBySmartCarNofromRMTOAsync(YourSmartCardNo, YourExchangeKey, null);
        }
        
        /// <remarks/>
        public void WebMethodGetTruckBySmartCarNofromRMTOAsync(string YourSmartCardNo, long YourExchangeKey, object userState) {
            if ((this.WebMethodGetTruckBySmartCarNofromRMTOOperationCompleted == null)) {
                this.WebMethodGetTruckBySmartCarNofromRMTOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebMethodGetTruckBySmartCarNofromRMTOOperationCompleted);
            }
            this.InvokeAsync("WebMethodGetTruckBySmartCarNofromRMTO", new object[] {
                        YourSmartCardNo,
                        YourExchangeKey}, this.WebMethodGetTruckBySmartCarNofromRMTOOperationCompleted, userState);
        }
        
        private void OnWebMethodGetTruckBySmartCarNofromRMTOOperationCompleted(object arg) {
            if ((this.WebMethodGetTruckBySmartCarNofromRMTOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebMethodGetTruckBySmartCarNofromRMTOCompleted(this, new WebMethodGetTruckBySmartCarNofromRMTOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class R2CoreTransportationAndLoadNotificationTruckDriver {
        
        private long driverIdField;
        
        private string nameFamilyField;
        
        private string nationalCodeField;
        
        private string mobileNumberField;
        
        private string fatherNameField;
        
        private string drivingLicenseNoField;
        
        private string addressField;
        
        private string smartCardNoField;
        
        /// <remarks/>
        public long DriverId {
            get {
                return this.driverIdField;
            }
            set {
                this.driverIdField = value;
            }
        }
        
        /// <remarks/>
        public string NameFamily {
            get {
                return this.nameFamilyField;
            }
            set {
                this.nameFamilyField = value;
            }
        }
        
        /// <remarks/>
        public string NationalCode {
            get {
                return this.nationalCodeField;
            }
            set {
                this.nationalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string MobileNumber {
            get {
                return this.mobileNumberField;
            }
            set {
                this.mobileNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FatherName {
            get {
                return this.fatherNameField;
            }
            set {
                this.fatherNameField = value;
            }
        }
        
        /// <remarks/>
        public string DrivingLicenseNo {
            get {
                return this.drivingLicenseNoField;
            }
            set {
                this.drivingLicenseNoField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string SmartCardNo {
            get {
                return this.smartCardNoField;
            }
            set {
                this.smartCardNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class R2CoreTransportationAndLoadNotificationTruck {
        
        private long truckIdField;
        
        private long loaderTypeIdField;
        
        private string pelakField;
        
        private string serialField;
        
        private string smartCardNoField;
        
        /// <remarks/>
        public long TruckId {
            get {
                return this.truckIdField;
            }
            set {
                this.truckIdField = value;
            }
        }
        
        /// <remarks/>
        public long LoaderTypeId {
            get {
                return this.loaderTypeIdField;
            }
            set {
                this.loaderTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string Pelak {
            get {
                return this.pelakField;
            }
            set {
                this.pelakField = value;
            }
        }
        
        /// <remarks/>
        public string Serial {
            get {
                return this.serialField;
            }
            set {
                this.serialField = value;
            }
        }
        
        /// <remarks/>
        public string SmartCardNo {
            get {
                return this.smartCardNoField;
            }
            set {
                this.smartCardNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodLoginCompletedEventHandler(object sender, WebMethodLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WebMethodLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WebMethodLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodGetDSPersonnelFingerPrintsCompletedEventHandler(object sender, WebMethodGetDSPersonnelFingerPrintsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WebMethodGetDSPersonnelFingerPrintsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WebMethodGetDSPersonnelFingerPrintsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodReportingInformationPrividerLoadPermissionsByAHSGsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodReportingInformationPrividerLoadPermissionsBySeqTsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodReportingInformationPrividerSedimentedLoadsReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodReportingInformationPrividerTruckersAssociationFinancialReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodReportingInformationPrividerContractorCompanyFinancialReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodReportingInformationPrividerDriverTruckLoadsReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionByAHSGsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionBySeqtsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodReportingInformationProviderTransportPriceTariffsReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodReportingInformationPrividerClearanceLoadsReportReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodReportingInformationPrividerAnnounceLoadsReportReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodReportingInformationPrividerSaleOfCommissionSMSReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodCarTruckHasTurnCompletedEventHandler(object sender, WebMethodCarTruckHasTurnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WebMethodCarTruckHasTurnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WebMethodCarTruckHasTurnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodISCompanyActiveCompletedEventHandler(object sender, WebMethodISCompanyActiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WebMethodISCompanyActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WebMethodISCompanyActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodGetTruckDriverByNationalCodefromRMTOCompletedEventHandler(object sender, WebMethodGetTruckDriverByNationalCodefromRMTOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WebMethodGetTruckDriverByNationalCodefromRMTOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WebMethodGetTruckDriverByNationalCodefromRMTOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public R2CoreTransportationAndLoadNotificationTruckDriver Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((R2CoreTransportationAndLoadNotificationTruckDriver)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WebMethodGetTruckBySmartCarNofromRMTOCompletedEventHandler(object sender, WebMethodGetTruckBySmartCarNofromRMTOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WebMethodGetTruckBySmartCarNofromRMTOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WebMethodGetTruckBySmartCarNofromRMTOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public R2CoreTransportationAndLoadNotificationTruck Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((R2CoreTransportationAndLoadNotificationTruck)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591