<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>