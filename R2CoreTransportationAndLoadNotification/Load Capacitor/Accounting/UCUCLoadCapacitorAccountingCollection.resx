<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="UcPictureExit.UCImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABAlJREFUWEetV8luE0EQNSD25QhcWY8gFOwcWETsSPwADgl8AhISUiS4cUMK4gOI
        khBETkTYHgdkYdkzk8xM24AiIVAOLB+AArkQGyQTElOvu8bx2DNeiJ/Uh67qqXpdXV1dE+oUmuMcTOpi
        RNPFRMqw3mmGtaLlrD8YiZz4IWWk00wxjLX82daRzFmnk4b9hBz91gxR7WQkDOsXkZlMm4WTbKZ7PC8U
        9mq684h2tyaN5qwNMmqmdDGaNgoXEllxeHZ2aRdGOl88kjTti9BpeWdergUZik7KEA9N09zDZjvDy/ni
        qaQhltSOrHXsJqk7J1jdFth5ynCm5LdkI2k4Hzr+XpsX57S8+K5CKT6lDLuPVV1jLifCZOczb2Q5odtn
        WeUP7Nx1ruXt17OmeYBV/w0kJNnLuiQCIzE3t7ivFnZyPr64uJNVWwZsuSRwHL45gYTDAoS9FztvBCKR
        0p0vcoO6GGOxAq6aynZrvfHMq/H4jvJAZHQ1Fn5Wip0fZHEgyoPhq+VYZKYUi9yp3g9tZ7GEyglKTLod
        nqOQ91wxm2RRDXBOBqsYP6/0/SUS11nVhFIsfANr3PU0v82qGsjHNPuakIJM5s0hFBncXb8Ewc5dg61I
        NDrHKEXDU6yuQUXb2kgYTlketSyvipHJazxA2BsNN5IoDURGmtbE+tZKsf4rvMQD8mXDZ1K3hzCZwARV
        jPVNgLMgEkHOV6ORa/x5E6g63lWbdh7TBA+LqKK8st4XQST8nJeikTh/5otU3rkkN50XxRBl5QomqO2s
        D4QfifohnQ+Gh3h5IF6Zb4/KCFBhCuFKYIJHhfUtEUQCsk6cA5lMZjcTqHRPINo/HEiAyPGylvAQQDOB
        CZ5U1gfCL+HqR6ckPEfgJiHec9b7wu+eY+4na0eCbt5l+FRJ2NE1DN9scsQJ55cT7UiQz3syAriGsofD
        hDoZ1nuA2u7rvO6qBZIYiER5iQduIUrrhbh8pdDDoTz69XBkbMZjOOCe+5FoV4qz2ex+KSRGk/IYqI2S
        gjrgVat33qrCNZIgordYVQMd9VOO+DiLVA+nrqO1jieTxRJ4UvGqYTdBtb0eCLtcS86rodA2FkuQ/X7V
        sFqVFzn7OIsV0L1KZujhetnXM/DqkvOvKtLiAYs3odpw+yOTyPayJUORo6c+J23nxXsUIlZ5gX4AxcEl
        0YtIYOeu81TO+ZZeWDjGKn+gdXZJoIdrzIluwGeuwg7n+eIZVrUGIoHuVUVC/phMo2VndVvgqiHbVcKp
        sLfdeSPQOpPjMfexksaogKCZwHuOeo6zxJC1HeUVFY6LDJOvIOECz7wTyLygco3CsWm49ZBr6Z43XbWt
        AA0kejjUbzwiKk+sCo9lKSMdymutwrVFKPQPx5fO1IljV74AAAAASUVORK5CYII=
</value>
  </data>
</root>