<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.UCIcon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBw8QERAPEBAQDxAQEBUQFRAOEBAREBYQFRUYFhYYFhUb
        IS0gGCYmHRgVIjEhJSk3Li4uGCAzODM4NygtLi3/2wBDAQoKCg4NDhoQEBotHh0fNy4zKy03Li8tLS0y
        LSs3LystKy0rLTctKy0rLS8tLS0tLS0rLSstLSstLS0rLS0tLS3/wAARCADCAQMDAREAAhEBAxEB/8QA
        HAABAAEFAQEAAAAAAAAAAAAAAAcBAgQFBgMI/8QATRAAAQMCAgMJDAcDCwUAAAAAAQACAwQRBRIGIZMH
        ExYxQVFTVNIXIjI0UmFxcnSBkrIUM3ORscLRI0KhFSQ1YmNkgqS0weKDorPw8f/EABoBAQEAAwEBAAAA
        AAAAAAAAAAABBAUGAwL/xAAzEQEAAQICBQoHAQADAAAAAAAAAQIDBBEFFVGRoRQhMlJTcYHB0fASEzEz
        YbHhQUJi8f/aAAwDAQACEQMRAD8AnFAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEHEy6WVIc4Bs
        Vg4jwX8h9Zc7Vpa/FUxlHH1b+nRdmYic54ei3hfU+TD8L+0vnW9/ZG6fV9aqs7Z4einC+p8mH4X9pNb3
        9kcfU1VZ2zw9FOGFT5MPwv7Sutr+yOPqmqrO2eHo22jWPTVMj2SNjAbHm7wOBvcDlJ51nYDHXL9c01RH
        NDDx2Ct2KIqpmfq9NKcalpTEIww74H3zhx8HLa1iOcr7x+Lrw80/Blz58MnngcJRfir4s+bLzaHhnVeR
        D8L+0sDWt7ZHH1bDVdnbPD0U4aVXkQ/C/tJrW9sjj6pquztnh6KHTWq8iD4X9pXWt7ZHH1NV2ds8PRTh
        tVeRB8L+0mtL2yOPqars7Z4ejtMFq3TQRSvADntuQ24F/Mt1h7k3LVNc/WWmxFuLd2qiPpDjavTSqZJI
        wMhs17mi7X3sHED95aivSV2KpjKOaZ/fe21GjbU0xOc8/vY8TpzV+RB8D+0prO9sjj6vrVlnbPD0UOnV
        X5EHwP7Sus72yOPqass7Z4einDur8iD4H9pNZXtke/FNWWds+/Bs9GdK6ipqGwyNiDXNcbsa4O1C/K4r
        JwuNuXbkU1RGTHxWCt2rc1UzOba6YY1LRxxviDCXyZTvgJFspOqxHMsjGYiqzTE0/wCyxsHh6b1UxV/j
        kzp9WeRT/BJ2lgaxu7I9+LYattbZ9+DrtEMYlq4XyShgc2UsG9ggWDWnlJ5ytjhL1V2iaqmuxlimzXFN
        OxvVlMQQEBAQEBAQEBAQEBAQRXUeG/13fiVxNfTnvn9uxo6Md0MigwuacOMTM2WwPfNbx+kr2s4W7ezm
        3GeXc8r2Jt2cvjnLNknRms6IbSP9V76txPV4x6vHWOH63CfRQ6MVvRDaR/qmrcT1eMeprHD9bhPo3Wie
        D1EEr3ysytMeUHMx2vMDyHzLYaOwl2zcmquMoy2xtYGkMVau24iic5zY+6Dx03ol/IvjTH1o8fJ96I+l
        fh5uPJWnbht26MVpAIiFiLj9pHxH3rNjR+ImM/h4x6sKcfYicvi4SHRSu6EbSL9V9avxHV4x6prDD9bh
        Kh0UruhG0i/VNX4jq8Y9TWGH63CXe4DTPip4Y3jK9jLEXBsb84W+wtFVFmmmr6w0WJrpru1VU/SUV4j9
        dN9q/wCcrmbnTq75/bpbXQp7o/S7DcMmqXFkLc7mjMRma3Ve3KV92rNd2cqIzfN29RajOucmedEK/oRt
        Yv1WRyC/1eMMfl9jrcJU4IV/QjaxfqryC/1eMHL7HW4S2+iejtXBVMlljDWBrwTnjdrIsNQN1lYPC3bd
        2KqoyjwYuMxdq5ammmc58WVum/UQfbfkK9NJ9Cnv8nlovp1d3mjsrUN0kjc08Vk9od8jFutHfanvaPSX
        3Y7vN1y2DXCAgICAgIOY040qGHxsDA188h71j75QweE51jfzDznzFBxZ3UK3oaYf4Ze0qi126dXckdMP
        8EnaQWHdMr/Ip9m/tILe6ViHNT7N3aQWndJxH+w2R7SCW8MndJDDI62Z8THm2oXc0E2UVGlR4b/Xd+JX
        E19Oe+f27Gjox3QugrZYr73I6O/HlcRdfVF+u30ass0rs0XOlTEvQ4xU9Yl2hX3y292k73nySz1I3LTj
        NT1iXaFXll7tJ3nJbPUjc32hdfNLNI2SV8gERNnOJF8zda2ei79dy7MVVTPN5tdpKzbotxNNMRz+Ruhc
        dN6JfyK6Y+tHj5Joj6V+Hm48rTtuyxjNSBYVEoA1W3w8S94xd2P+c73jOFtT/wAI3KHG6rrMu0cryu71
        53pyWz1I3LTjlV1mXaOV5Xd687zktnqRuSRo3M59LA97i5zmXLnG5JueMro8JVNVmmZnOcnO4umKb1UR
        GUItxH66b7V/zlc3c6dXfP7dJa6FPdH6edNWSREujkdGSLEscWkjmSi5Vb56ZyK7dNfNVGb3OPVfWZto
        5enKrvXne8+S2upG5Q49V9am2jleVXOvO85Na6kbm70Lxaolq2MknkkaWvOVzyRqbq1LMwN+uu9ETVMx
        zsPHWLdFmZppiJ5m13TfqIPtj8hWRpPoU9/kxtF9Oru80dFahuUk7mnisntDvkYt1o77U97SaS+7Hd5u
        uWwa4QEBAQEGNiNdHTxSTynKyNpcT+AHnJsB6UEBY9i0lZPJUScbz3reRrB4LR6B/G55VUeNDh885Ihi
        klLbEiNhdYHivbiQZ3BfEOp1GzKDFpcJqZZHwxwvfLHfOxo75uU5TceY6kF+I4JV07Q+eB8THOyhzwBd
        1ibcfmKDXEoPojA/Fqb7CP5AoqOajw3+u78SuJr6c98/t2NHRjuhn4Ni4pw8GFsucg98QLW9xWXhMXFi
        Jiafiz97GLisLN+Yyq+HJseFjOqM+IdlZmtaezjf/GLqyrtJ9+KnC1nVGfEOyrrWOzjf/DVlXaT78W00
        dxxtRI5ggbFlZmzNIN9YFuIc6zMFjYv1zTFHw5R7/wAYeMwk2aIqmrPn9/61u6Fx03ol/IsbTH1o8fJk
        6I+lfh5uPK0zbunj0uY1rW/RGGwAvmGuw9VbeNJxEZfLjf8Axq6tHVTOfzJ9+K7hizqcfxjsq6zjs43/
        AMfOrau0n34qcMmdTj+MdlNZx2cb/wCGrau0n34uvweqE0EUoaGB7b5BrAW2sXPmW6a8ss2pv2/l3Jpz
        zyRNiP1032snzlczc6dXfP7dPa6FPdH6ZeA4sKV73mJs2ZmXK4gW13vxFe2Gv/JqmfhzzeOJsTepiIqy
        ybrhtH1KP4x2Vm6xjs43/wAYerp7Sffipw3j6lH8Y7KaxjqRv/hq6e0n34tlo7pQyoqGwilZES1xztcC
        RYX8kL3w2Mi7c+H4cvfcx8Tg5tW5q+PP33rN036iD7b8hU0n0Ke/yXRnTq7vNHJWoblJW5p4rJ7Q75GL
        daO+1Pe0mkvux3ebrlsGuEBAQEBBEm6jpJv0v0KJ37KF15COJ0w5POG/jfmVRwsTHOc1rQXOcQ0NGslx
        NgAgnfQzR9tDTNjNjM/v5XDleeQHmbxD3nlUVvkEbaCf0vinrz/6hBm7sHikHtI+R6CIyVUfRWB+LU32
        EfyBRUc1Phv9d34lcTX0575/bsaOjHdDPwbCmVAeXTNhykAZgNd/SQszCYWm/EzVV8OTFxWJqszHw0/F
        m2PBeHrjPuZ2lmast9rHD1YusrnZz78FDotD1xn3M7Sast9rHD1TWNzs59+DaaO4NHTyOe2obMSzLlaG
        6hcG+onmWZgsJRZrmqmv4uZiYzFVXqIpmj4edrd0PjpvRL+RY2mPrR4+TJ0T9K/DzccStNLbuoi0Vhc1
        rjWMFwDazNVx6y28aOtzGfzP16tXVpC5EzHy59+C7gjB12P7mdpfWrrfafr1fOsbnZz78FvBGDr0f3M7
        Saut9p+vU1hc7Offg7DB6YRQRRNeJAxtg8WsfOttYoi3bimJzyam/XNdyapjLNE2I/XTfbSfOVzFzp1d
        8/t01roU90fplYDhbKl72PmbAGtzBzgDc3tbWQvfDWIu1TE1ZZPLE35tUxMU5t3wNg6/H9zO0szV9Hae
        97D1hc7OffgpwMg6/H9zO0rq+jtPe81hc7Offg2WjujUVPO2VtWyZwa4ZGhtzcW5HFe+GwlNu58UV5sf
        E4uq5bmmaMvfcs3TvqIPtvyFTSfQp7/JdGdOru80crTtykrc08Vk9od8jFutHfanvaTSX3Y7vN1y2DXC
        AgICDmNPtI/oNOch/nE12Rjlb5T/AHA/eQgg0uJ1m5J1knWSVUSPuU6N5nfyhK3vWkthB5XcTn+7WB57
        8wUEpIogjXQP+l8U9ef/AFCIzd2HxSD2kfI9FRESqj6MwLxam9nj+QKKjip8N/ru/Eria+nPfP7djR0Y
        7oUjp3vvkY99uPIxzremytNuqvo0zPhmVXKaelMR4qmgm6GXZP8A0X3ye51J3T6Pj59vrRvhQ4fP0E2y
        f+icnudSd0+h8+31o3w6HQelkZPIXxvYDERd7HNF8zeUhbTRVqqm7MzTMc2zL/Wt0ncoqtRFMxPPt/C7
        dD46b0S/kX3pf60ePk+dE/Svw83HFadt3t/J8517xMb67iJ/6L1+Rc6k7p9Hn8631o3wocNn6CbYyfon
        yLnUndPonz7fWjfC04bP1ebYyfor8i51J3T6J8631o3wk3RmNzaSBrgWkM1tcCCNZ4wV0mDiYsUxPNzO
        dxcxN6qYRbiP10320nzlc5c6dXfP7dFa6FPdH6eMVO+Q2Yx8hGshjHOIHoCU0TV9Iz4vqqumn6zk9Dhl
        R1efYyfovv5NfUndL4+db60b4WnC6jq8+xk/RPk19Wd0nzrfWjfDe6D0MzKyNz4ZWNyP758T2jwechZu
        BtVU3omaZj6/4wsfcoqszEVRP0/1ut076iD7Y/IVlaT6FPf5MXRnTq7vNHS07cpK3NPFZPaHfIxbrR32
        p72k0l92O7zdctg1wgICAgiTdk8Zp/Zz85RJcAwi4zAkXFwDYkctjyKiR6TdSZExkUdAGsY0Na0VGoNA
        sP3FB691r+5f5j/ghmd1r+5f5j/gg5rAdL/otZVVm8b59JMh3vfMuXPJvnhZTe3FxKj30x03/lGJkP0f
        eckm+Zt9z370i1so50HIEoPo3AvFab2eP5AoqOKnw3+u78SuKr6c98/t2NHRjuhlYXjM1MHCPJ35BOdp
        PFzWIWRh8ZcsRMUZc+3/ANeGIwlu/MTXnzM3hfV80PwO7Syda4j/AK7p9WNqux+d/wDFDphV80PwO7Su
        tcR+N0+pqux+d/8AFOGNXzQ/A7tJrXEfjdPqarsfnf8AxrMXxiWqyGXJ+zzWyNI8K173J5gsfEYq5fy+
        PLm2flkWMNRYz+DPna0rHyZDfs0xq2gNAhs0AC7HcQ/xLYxpO/EZc26fVr50bZmc+ff/ABXhrWc0PwO7
        Sus7/wCN0+qassfnf/FOG1ZzQbN3aV1nf/G6fVNWWfzv/i06b1nNBs3dpXWd/wDG6fU1ZZ/O/wDjnJpC
        5znnjc4uNuK5NysGZzmZn/WdEZRER/jLwfGJaRznxZLublOdpcLXvyEL2sX67MzNOXO8r9ii9ERV/ja8
        Oq3mg2b+0srWV78bp9WLq2z+d/8AFp07reaDZv7Saxvfjd/TVtn87/4pw8reaDZv7Susb343f01bZ/O/
        +NbjekdRWNayYRgMdmG9tc03tbXcnnXjexNd6IirLm97XtZwtFmZmnPnadY7ISVuaeKye0O+Ri3WjvtT
        3tJpL7sd3m65bBrhAQEBBEe7N4zTezn5yqiProCAgICBdAJQfR+A+K03s8fyBRXHz6M1Zc4hjbFxI79v
        ESuZq0ZiJqmco3ujp0jYimIz4PM6LVnkN2jVNWYjZG99ayw+3godFqzyG7RqasxGyN6axw+3gtOitZ0b
        do1XVmI2RvNY4fbwU4KVvRt2jVdW4jZG81jh9vBTgnW9G3aNTVuI2RvTWNjbwW8Eq3o27RiurcRsjeax
        sbeCh0RrejbtGK6uxGyN5rGxt4LeCFd0bdoxNXX9kb01hY28FDohXdG3aMV1df2RvNYWNvBQ6H13Rt2j
        E1ff2RvNYWNvBadDq7o27Riur7+yN6awsbeCnA2v6Nu0Yrq+/sjeawsbeCnAyv6Nu0Yrq+/sjeawsbeC
        06F1/Rt2jE5Bf2RvTWFjbwUOhdf0bNoxXkF/ZG85fY28FOBVf0bNqxOQXtnE5fY28DgViHRs2rE5Be2c
        Tl9jbwdroThc1LA+OZoa4yl4AcHd6WtHGPQVs8HZqtUTFW1q8beou1xNOx0Ky2GICAgIIh3Z/Gqb2c/O
        VUlH10C6BdAugXQLoBKCfcF0ioW09O11XTNc2CMEGeMEEMFwRdRWbwlw/rlLt4v1QchppugPppY20T6W
        oY6PM51zJZ2Yi12u1akRz3dUxDo6XZydtUzO6piHR0uzl7aGZ3VMQ6Ol2cvbQzO6piHR0vwS9tDM7qmI
        dHS/BL20MzuqYh0dL8EnbQzO6piHR0vwSdtDM7qmIdHS/BJ20MzuqYh0dL8EnbQzV7qmIdHS/BJ20Dup
        4h0dLs5O2gd1PEOjpdnJ20Dup4h0dLs5e2gd1PEOjpdnL20Dup4h0dLs5e2g63QTTU1m+Nqn08UmdjIm
        NORz81+IOcS7XbiUV26AgICAg53dArJYMPqJYXujkbvdnsNnC8rAbe4lBBeJYpUVLmuqJXzOaMoLzcgX
        vZVGJdAug7/RDc4fVRtqKmR0MTxmZGwDfXNPE4k6mg8mok+ZBvcT3KKcsP0aeWOQcW/ZXsPmNgCPT/BD
        JFmI0UtPK+CZuSSN2Vzf9weUEWIPMUGMgICAgqgXQLoF0C6BdAugXQe9FSyTSMhiaXySOyta3jJ/29KC
        SsN3JgWg1NU4PI8GBoytPNmd4X3BDJoNLdAJ6FhnY8VEDfCIblkYOdzbm484+5BxqAg22jmAVFfLvMAG
        oZnyPuGMbzn/AGHL96CQWbkkWSzquTfLeE2NgZf1b3/7lDJwulWi9Rhzw2Wz433yTMByutxgj90+ZUeO
        iPj9F7VF84QfRKiiAgICDlt07+i6r/pf+ZiCBbqoXQZGHsa6aFr/AAHSsa71C4B38LoPpprQAABYAWAH
        MoqqCHt2eJgqqdwtnfAc3OQ15y3+8/crCSj26Ct0C6BdAugXQLoF0C6BdAugXREibi9Ox1TUyEAvjhaG
        35A9xzEfCB70lYS8oqyeJr2uY4BzXtLXA8RaRYg+5B8y1LA172jWGvc0HzAkBVHndBNW5DTsbQb4AM0s
        zy48venKB9w/iort0HM7pFMyTDanPb9m0SNJ5HtcLW9NyPeghrRE/wA/ovaovnCqPotRRAQEBB4VtHFO
        x0UzGyxutdjwHNNiCLj0gINVwPwzqNNsmIHA/DOo02yYggzSjB30VVNTuBAa4ujdxZona2Ee7UfOCqiS
        9DN0enfEyGtfvMzGhu+uvvcgHESf3Tz31fgA32J6eYZAwv8ApMcx5GU7hK4nm1ah7yoqFNJcckrqh9TI
        A3N3rWA3DIx4Lb8vLr5SSqiWdC9CKZlHF9LpYpKh95Hb7G1zm5vBZr4rC2rnuorecD8M6jTbJiBwPwzq
        NNsmIHA/DOo02yYgcD8M6jTbJiBwPwzqNNsmIHA/DOo02yYgcD8M6jTbJiBwPwzqNNsmIHA/DOo02yYg
        cD8M6jTbJiDm90DQym+hvkpKaKKWEiU7zGGudGL5xq49Rvb+qqiNtENIXYfUtnAzsIySMBtmjJBNvOLA
        j0edBOOG6UUFQwPjqoeK5a97WPb6zXawornNNd0CmgifDSSsnqHgtDoiHRx31FxcNRI5AOXjREVaMYS+
        sqoadoJD3gvPHaJut5Pu1ekjnVHX7q2jEdMYammibFC4b09sbbNEmstcbc4uL/1RzoMTc30yZQl1PUX+
        jyuzh4BJjksASRyggDi4recoJaZpBQuZvgq6bJa+bf47W8+vUoqM90rTeKpZ9DpXZ4swdJMLhrsusNbz
        i+snzCyqMPcmwTf6s1D23ipRcEjUZz4FvQLu83e86SQmpRRAQEBAQEBBodLdFqfEYwyS7JGXMczQMzSe
        T+sDyj/6giTFtzrE4CcsX0lnI+AgkjzsPfD+KqMCk0LxSU5W0czfPKBEPvdZBIuhe5s2me2oq3NmmbZz
        ImC8THc5J8Mjk1WHn1KGSQ0UQEBAQEBAQEBAQEEXaZbmbnOdPQZRmOZ1M4hovymN3EPVPuPIqiParR+u
        jOWSjqQR/YSEe4gWPuQbDB9CcRqXANp3xN5ZKhpiaBz2Os+4IJh0N0Thw6Mhp3yZ/wBZMRYn+q0futHM
        ordV9FHPG+GVgfHI3K5p4iP/AHXdBDuku5pVwOc+lBqob3DRYTtHMW/vekfcqjkzglYDlNJU5ub6PLf8
        EHR6PbnNdUuBmYaSHldKP2pHM2Pjv61kEy4LhMNHCyngblYzn1uc48bnHlJUVnICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAg//2Q==
</value>
  </data>
</root>